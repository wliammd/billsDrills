[["modeling.html", "Chapter 17 Modeling 17.1 Modeling notes", " Chapter 17 Modeling 17.1 Modeling notes Notes on/inspired by the Machine Learning with caret in R DataCamp course. 17.1.1 An rpart classification example. model &lt;- rpart( Species ~ ., data = iris, method = &quot;class&quot; ) predicted &lt;- predict(model, iris, type = &quot;class&quot;) predicted ## 1 2 3 4 5 6 7 ## setosa setosa setosa setosa setosa setosa setosa ## 8 9 10 11 12 13 14 ## setosa setosa setosa setosa setosa setosa setosa ## 15 16 17 18 19 20 21 ## setosa setosa setosa setosa setosa setosa setosa ## 22 23 24 25 26 27 28 ## setosa setosa setosa setosa setosa setosa setosa ## 29 30 31 32 33 34 35 ## setosa setosa setosa setosa setosa setosa setosa ## 36 37 38 39 40 41 42 ## setosa setosa setosa setosa setosa setosa setosa ## 43 44 45 46 47 48 49 ## setosa setosa setosa setosa setosa setosa setosa ## 50 51 52 53 54 55 56 ## setosa versicolor versicolor versicolor versicolor versicolor versicolor ## 57 58 59 60 61 62 63 ## versicolor versicolor versicolor versicolor versicolor versicolor versicolor ## 64 65 66 67 68 69 70 ## versicolor versicolor versicolor versicolor versicolor versicolor versicolor ## 71 72 73 74 75 76 77 ## virginica versicolor versicolor versicolor versicolor versicolor versicolor ## 78 79 80 81 82 83 84 ## versicolor versicolor versicolor versicolor versicolor versicolor versicolor ## 85 86 87 88 89 90 91 ## versicolor versicolor versicolor versicolor versicolor versicolor versicolor ## 92 93 94 95 96 97 98 ## versicolor versicolor versicolor versicolor versicolor versicolor versicolor ## 99 100 101 102 103 104 105 ## versicolor versicolor virginica virginica virginica virginica virginica ## 106 107 108 109 110 111 112 ## virginica versicolor virginica virginica virginica virginica virginica ## 113 114 115 116 117 118 119 ## virginica virginica virginica virginica virginica virginica virginica ## 120 121 122 123 124 125 126 ## versicolor virginica virginica virginica virginica virginica virginica ## 127 128 129 130 131 132 133 ## virginica virginica virginica versicolor virginica virginica virginica ## 134 135 136 137 138 139 140 ## versicolor versicolor virginica virginica virginica virginica virginica ## 141 142 143 144 145 146 147 ## virginica virginica virginica virginica virginica virginica virginica ## 148 149 150 ## virginica virginica virginica ## Levels: setosa versicolor virginica mean(predicted == iris$Species) ## [1] 0.96 Study whatâ€™s going on in predict(): ?predict.rpart Now for a regression example from the course: library(caret) ## Loading required package: lattice ## ## Attaching package: &#39;caret&#39; ## The following object is masked from &#39;package:purrr&#39;: ## ## lift model &lt;- train( price~., diamonds, method = &quot;lm&quot;, trControl = trainControl( method = &quot;cv&quot;, number = 10, verboseIter = TRUE ) ) ## + Fold01: intercept=TRUE ## - Fold01: intercept=TRUE ## + Fold02: intercept=TRUE ## - Fold02: intercept=TRUE ## + Fold03: intercept=TRUE ## - Fold03: intercept=TRUE ## + Fold04: intercept=TRUE ## - Fold04: intercept=TRUE ## + Fold05: intercept=TRUE ## - Fold05: intercept=TRUE ## + Fold06: intercept=TRUE ## - Fold06: intercept=TRUE ## + Fold07: intercept=TRUE ## - Fold07: intercept=TRUE ## + Fold08: intercept=TRUE ## - Fold08: intercept=TRUE ## + Fold09: intercept=TRUE ## - Fold09: intercept=TRUE ## + Fold10: intercept=TRUE ## - Fold10: intercept=TRUE ## Aggregating results ## Fitting final model on full training set # Print model to console model ## Linear Regression ## ## 53940 samples ## 9 predictor ## ## No pre-processing ## Resampling: Cross-Validated (10 fold) ## Summary of sample sizes: 48546, 48546, 48547, 48546, 48545, 48547, ... ## Resampling results: ## ## RMSE Rsquared MAE ## 1130.829 0.919719 740.4618 ## ## Tuning parameter &#39;intercept&#39; was held constant at a value of TRUE Note that caret handles the work of splitting test sets and calculating RMSE. Another example from the DataCamp course. library(MASS) ## ## Attaching package: &#39;MASS&#39; ## The following object is masked from &#39;package:dplyr&#39;: ## ## select # Fit lm model using 5-fold CV: model model &lt;- train( medv~., Boston, method = &quot;lm&quot;, trControl = trainControl( method = &quot;cv&quot;, number = 5, verboseIter = TRUE ) ) ## + Fold1: intercept=TRUE ## - Fold1: intercept=TRUE ## + Fold2: intercept=TRUE ## - Fold2: intercept=TRUE ## + Fold3: intercept=TRUE ## - Fold3: intercept=TRUE ## + Fold4: intercept=TRUE ## - Fold4: intercept=TRUE ## + Fold5: intercept=TRUE ## - Fold5: intercept=TRUE ## Aggregating results ## Fitting final model on full training set # Print model to console model ## Linear Regression ## ## 506 samples ## 13 predictor ## ## No pre-processing ## Resampling: Cross-Validated (5 fold) ## Summary of sample sizes: 405, 405, 404, 405, 405 ## Resampling results: ## ## RMSE Rsquared MAE ## 4.833617 0.7289616 3.388943 ## ## Tuning parameter &#39;intercept&#39; was held constant at a value of TRUE Cross validation can itself be repeated. # Fit lm model using 5 x 5-fold CV: model model &lt;- train( medv ~ ., Boston, method = &quot;lm&quot;, trControl = trainControl( method = &quot;repeatedcv&quot;, number = 5, repeats = 5, verboseIter = TRUE ) ) ## + Fold1.Rep1: intercept=TRUE ## - Fold1.Rep1: intercept=TRUE ## + Fold2.Rep1: intercept=TRUE ## - Fold2.Rep1: intercept=TRUE ## + Fold3.Rep1: intercept=TRUE ## - Fold3.Rep1: intercept=TRUE ## + Fold4.Rep1: intercept=TRUE ## - Fold4.Rep1: intercept=TRUE ## + Fold5.Rep1: intercept=TRUE ## - Fold5.Rep1: intercept=TRUE ## + Fold1.Rep2: intercept=TRUE ## - Fold1.Rep2: intercept=TRUE ## + Fold2.Rep2: intercept=TRUE ## - Fold2.Rep2: intercept=TRUE ## + Fold3.Rep2: intercept=TRUE ## - Fold3.Rep2: intercept=TRUE ## + Fold4.Rep2: intercept=TRUE ## - Fold4.Rep2: intercept=TRUE ## + Fold5.Rep2: intercept=TRUE ## - Fold5.Rep2: intercept=TRUE ## + Fold1.Rep3: intercept=TRUE ## - Fold1.Rep3: intercept=TRUE ## + Fold2.Rep3: intercept=TRUE ## - Fold2.Rep3: intercept=TRUE ## + Fold3.Rep3: intercept=TRUE ## - Fold3.Rep3: intercept=TRUE ## + Fold4.Rep3: intercept=TRUE ## - Fold4.Rep3: intercept=TRUE ## + Fold5.Rep3: intercept=TRUE ## - Fold5.Rep3: intercept=TRUE ## + Fold1.Rep4: intercept=TRUE ## - Fold1.Rep4: intercept=TRUE ## + Fold2.Rep4: intercept=TRUE ## - Fold2.Rep4: intercept=TRUE ## + Fold3.Rep4: intercept=TRUE ## - Fold3.Rep4: intercept=TRUE ## + Fold4.Rep4: intercept=TRUE ## - Fold4.Rep4: intercept=TRUE ## + Fold5.Rep4: intercept=TRUE ## - Fold5.Rep4: intercept=TRUE ## + Fold1.Rep5: intercept=TRUE ## - Fold1.Rep5: intercept=TRUE ## + Fold2.Rep5: intercept=TRUE ## - Fold2.Rep5: intercept=TRUE ## + Fold3.Rep5: intercept=TRUE ## - Fold3.Rep5: intercept=TRUE ## + Fold4.Rep5: intercept=TRUE ## - Fold4.Rep5: intercept=TRUE ## + Fold5.Rep5: intercept=TRUE ## - Fold5.Rep5: intercept=TRUE ## Aggregating results ## Fitting final model on full training set # Print model to console model ## Linear Regression ## ## 506 samples ## 13 predictor ## ## No pre-processing ## Resampling: Cross-Validated (5 fold, repeated 5 times) ## Summary of sample sizes: 404, 406, 404, 405, 405, 404, ... ## Resampling results: ## ## RMSE Rsquared MAE ## 4.926058 0.7180034 3.429873 ## ## Tuning parameter &#39;intercept&#39; was held constant at a value of TRUE "]]
