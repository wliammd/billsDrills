[
["index.html", "Bill’s Drills Book Chapter 1 Drills: Part of Every Healthy Intellectual Diet", " Bill’s Drills Book William McDonald 2020-04-17 Chapter 1 Drills: Part of Every Healthy Intellectual Diet The goal of this book is to organize my R drills into reasonable chunks, the better to understand my strengths and weaknesses, and to plan new forays into data science. Notes on bookdown: the _bookdown.yml file contains a snippet that is important to inserting the word “Chapter” before the chapter number in each of the Rmd files. packages are indicated in bold, like dplyr inline code and filenames are indicated in typerwriter face using backticks, like _bookdown.yml _output.yml is modified from that used by Xie in his bookdown-demo (Xie 2020); it evokes style.css, toc.css, preamble.tex, which are also borrowed from Xie. References "],
["dataexploration.html", "Chapter 2 Data Exploration 2.1 Counting things. The naming of parts. 2.2 Summarize is another very useful function: 2.3 Referencing other parts of the document 2.4 Referencing citations:", " Chapter 2 Data Exploration Data exploration is one of the most important aspects of data science and forms the cornerstone of my drills. Nonetheless, I have lots of room for improvement. I like Hadely Wickham’s writing and find his approach exceptionally clear. Therefore, I’ll use the tidyverse. library(tidyverse) ## Warning: package &#39;tibble&#39; was built under R version 3.6.2 2.1 Counting things. The naming of parts. starwars %&gt;% filter(!is.na(species)) %&gt;% count(species = fct_lump(species, 5), sort = TRUE) %&gt;% mutate(species = fct_reorder(species, n)) %&gt;% ggplot(aes(species, n)) + geom_col() + coord_flip() Figure 2.1: Starwars Figure 1 I like stacked bars for their economy, but it’s easy to over do it. Supperimposing gender onto the columns seems easy… starwars %&gt;% filter(!is.na(species)) %&gt;% count(species = fct_lump(species, 5), gender = fct_lump(gender, 2), sort = TRUE) %&gt;% mutate(species = fct_reorder(species, n)) %&gt;% ggplot(aes(species, n, fill = gender)) + geom_col() + coord_flip() ## Warning: Factor `gender` contains implicit NA, consider using ## `forcats::fct_explicit_na` But note that I’ve got a problem: the Droids, which outnumber the Gungans, are now reordered to after the Gungans. This happens because the \\(n\\) that we’re counting comprises subcategories of species and gender. Only three Gungan males exist (and no females), but that is enough to tie the Droid NA category. The Droid NA category come after the Gungan category, presumably because male comes before NA, or because NA comes last (more likely). Exploring this, I see that I’m getting warning messages about the implicit NA’s in gender. Note that the following renders a slightly different plot. I still have not fixed the order of the species. starwars %&gt;% filter(!is.na(species)) %&gt;% count(species = fct_lump(species, 5), gender = fct_lump(gender, 2), sort = TRUE) %&gt;% mutate(gender = fct_explicit_na(gender), species = fct_reorder(species, n)) %&gt;% ggplot(aes(species, n, fill = gender)) + geom_col() + coord_flip() ## Warning: Factor `gender` contains implicit NA, consider using ## `forcats::fct_explicit_na` The trick here is to use group_by() and ungroup() wisely. starwars %&gt;% filter(!is.na(species)) %&gt;% mutate(species = fct_lump(species, 5)) %&gt;% group_by(species) %&gt;% mutate(typeCount = n()) %&gt;% ungroup() %&gt;% mutate(species = fct_reorder(species, typeCount)) %&gt;% ggplot()+ geom_bar(aes(species, fill = gender))+ coord_flip() As opposed to using count(), which progressively narrows the information available to be used, by using group_by()/mutate()/ungroup() with geom_bar() we have all of the variables still available for plotting. 2.2 Summarize is another very useful function: starwars %&gt;% filter(!(is.na(species))) %&gt;% group_by(species) %&gt;% summarize(n=n(), mean = mean(height, na.rm = TRUE)) %&gt;% arrange(desc(n)) ## # A tibble: 37 x 3 ## species n mean ## &lt;chr&gt; &lt;int&gt; &lt;dbl&gt; ## 1 Human 35 177. ## 2 Droid 5 140 ## 3 Gungan 3 209. ## 4 Kaminoan 2 221 ## 5 Mirialan 2 168 ## 6 Twi&#39;lek 2 179 ## 7 Wookiee 2 231 ## 8 Zabrak 2 173 ## 9 Aleena 1 79 ## 10 Besalisk 1 198 ## # … with 27 more rows 2.3 Referencing other parts of the document This is a good place to practice referencing figures. Say that I want to refer the reader back to my first starwars figure. See Figure 2.1. I can reference other pages in a similar fashion. See Chapter 9. Note that this works by referencing a {#label} placed in the chapter title. See Chapter 1 See Chapter 2 Note that the {#label} uses a single run-together word. It does not tolerate spaces and this cannot be overcome by ‘quoting’ it. 2.4 Referencing citations: In order to insert citations, one needs a .bib file in the project. I’ve included one in this project as book.bib. The yml header in Chapter 1 needs to have a \\(bibliography:\\) and \\(biblio-style:\\) line added. To insert a citation, use the citr Addin from RStudio. bookdown, for instance, is cited thusly (Xie 2020). Note that I need to figure out an adequate workflow of references. The convenience of Endnote in MS Word will not be available. Nonetheless, if I populate the book.bib and packages.bib files carefully, with .txt files generated in Endnote, I should be OK. For instance, a recent dump of my Endnote library is in bookFromEndnote.txt. This can be opened in RStudio, and I can copy-and-paste references from the .txt file to my book.bib. For instance, if I have a breast paper that I want to cite here (Stevens and Parekh 2016), I’d copy-and-paste the reference from bookFromEndnot.text to book.bib. Of note, Yihui Xie includes a nifty bit of code to automatically generate a bib database for R packages: knitr::write_bib(c(.packages(), &#39;bookdown&#39;, &#39;knitr&#39;, &#39;rmarkdown&#39;, &#39;tidyverse&#39;, &#39;ComplexHeatmap&#39;), &#39;packages.bib&#39;) References appear automatically at the end of a chapter. References "],
["sampling.html", "Chapter 3 Sampling 3.1 Think about throwing a bunch of dice. 3.2 A keen way to divide up a dataset into testing and training components.", " Chapter 3 Sampling 3.1 Think about throwing a bunch of dice. sample(1:6, size=100, replace=TRUE) ## [1] 6 6 6 5 1 6 4 2 6 4 3 4 3 2 6 4 1 5 5 3 1 5 5 3 3 1 1 5 2 6 5 2 1 3 3 2 5 ## [38] 1 1 6 5 3 1 1 5 6 4 4 5 4 2 5 5 6 6 4 1 6 6 2 6 3 3 6 1 3 2 5 5 6 6 6 4 4 ## [75] 1 6 4 1 4 6 1 2 5 3 5 5 3 6 5 1 2 2 5 1 1 5 2 2 2 2 sample(1:6, size=100, replace=TRUE) %&gt;% table() ## . ## 1 2 3 4 5 6 ## 17 13 10 22 21 17 sample(1:6, size=100, replace=TRUE) %&gt;% table() %&gt;% prop.table() ## . ## 1 2 3 4 5 6 ## 0.17 0.14 0.22 0.19 0.16 0.12 3.2 A keen way to divide up a dataset into testing and training components. x &lt;- 1:50 y &lt;- 51:100 df &lt;- data.frame(x,y) df ## x y ## 1 1 51 ## 2 2 52 ## 3 3 53 ## 4 4 54 ## 5 5 55 ## 6 6 56 ## 7 7 57 ## 8 8 58 ## 9 9 59 ## 10 10 60 ## 11 11 61 ## 12 12 62 ## 13 13 63 ## 14 14 64 ## 15 15 65 ## 16 16 66 ## 17 17 67 ## 18 18 68 ## 19 19 69 ## 20 20 70 ## 21 21 71 ## 22 22 72 ## 23 23 73 ## 24 24 74 ## 25 25 75 ## 26 26 76 ## 27 27 77 ## 28 28 78 ## 29 29 79 ## 30 30 80 ## 31 31 81 ## 32 32 82 ## 33 33 83 ## 34 34 84 ## 35 35 85 ## 36 36 86 ## 37 37 87 ## 38 38 88 ## 39 39 89 ## 40 40 90 ## 41 41 91 ## 42 42 92 ## 43 43 93 ## 44 44 94 ## 45 45 95 ## 46 46 96 ## 47 47 97 ## 48 48 98 ## 49 49 99 ## 50 50 100 set.seed(0) train_indexes = sample(1:nrow(df), .7 * nrow(df)) train_set &lt;- df[train_indexes,] test_set &lt;- df[-train_indexes,] train_set ## x y ## 14 14 64 ## 4 4 54 ## 39 39 89 ## 1 1 51 ## 34 34 84 ## 23 23 73 ## 43 43 93 ## 50 50 100 ## 18 18 68 ## 33 33 83 ## 21 21 71 ## 40 40 90 ## 10 10 60 ## 7 7 57 ## 9 9 59 ## 15 15 65 ## 48 48 98 ## 25 25 75 ## 44 44 94 ## 5 5 55 ## 31 31 81 ## 2 2 52 ## 38 38 88 ## 41 41 91 ## 12 12 62 ## 35 35 85 ## 47 47 97 ## 20 20 70 ## 3 3 53 ## 6 6 56 ## 28 28 78 ## 45 45 95 ## 46 46 96 ## 27 27 77 ## 49 49 99 test_set ## x y ## 8 8 58 ## 11 11 61 ## 13 13 63 ## 16 16 66 ## 17 17 67 ## 19 19 69 ## 22 22 72 ## 24 24 74 ## 26 26 76 ## 29 29 79 ## 30 30 80 ## 32 32 82 ## 36 36 86 ## 37 37 87 ## 42 42 92 "],
["factor-practice.html", "Chapter 4 Factor Practice", " Chapter 4 Factor Practice cups &lt;- c(&quot;small&quot;, &quot;medium&quot;, &quot;large&quot;) manyCups &lt;- sample(cups, size = 100, replace = TRUE) sizesCups &lt;- factor(manyCups, levels = c(&quot;small&quot;, &quot;medium&quot;, &quot;large&quot;)) sizesCups ## [1] medium small large medium small small large medium medium large ## [11] large medium medium medium medium small medium medium medium medium ## [21] small large large medium large large medium large large small ## [31] small small small large medium large small small medium small ## [41] small small small large medium small small large large large ## [51] medium medium medium large medium medium large large large small ## [61] medium medium small large large medium large medium small medium ## [71] small large large small medium small large medium large large ## [81] small small medium medium medium small small small medium small ## [91] large medium large large medium large large small small medium ## Levels: small medium large "],
["crossing-trial.html", "Chapter 5 Crossing Trial", " Chapter 5 Crossing Trial From David Robinson birthday paradox Rblogger at https://www.r-bloggers.com/the-birthday-paradox-puzzle-tidy-simulation-in-r/ summarized &lt;- crossing(people = seq(2, 50, 2), trial = 1:100) %&gt;% mutate(birthday = map(people, ~ sample(365, .x, replace = TRUE)), multiple = map_lgl(birthday, ~ any(duplicated(.x)))) %&gt;% group_by(people) %&gt;% summarize(chance = mean(multiple)) ggplot(summarized, aes(people, chance)) + geom_line() + scale_y_continuous(labels = scales::percent_format()) + labs(y = &quot;Probability two have the same birthday&quot;) # Checking the work with pbirthday function summarized %&gt;% mutate(exact = map_dbl(people, pbirthday)) %&gt;% ggplot(aes(people, chance)) + geom_line() + geom_line(aes(y = exact), lty = 2, color = &quot;blue&quot;) + scale_y_continuous(labels = scales::percent_format()) + labs(y = &quot;Probability two have the same birthday&quot;) "],
["by-any-other-name.html", "Chapter 6 By Any Other Name", " Chapter 6 By Any Other Name This deceptively simple-seeming idea gets complex quickly. The following YouTube was a nice description of the process: https://www.youtube.com/watch?v=Okc0IL5uTnA my.data &lt;- data.frame(colOne=1:3, column2=4:6, column_3=7:9) rownames(my.data) &lt;- c(&quot;ant&quot;, &quot;bee&quot;, &quot;cat&quot;) names(my.data) ## [1] &quot;colOne&quot; &quot;column2&quot; &quot;column_3&quot; colnames(my.data) ## [1] &quot;colOne&quot; &quot;column2&quot; &quot;column_3&quot; #make some changes names(my.data) &lt;- c(&quot;col_1&quot;, &quot;col_2&quot;, &quot;col_3&quot;) my.data ## col_1 col_2 col_3 ## ant 1 4 7 ## bee 2 5 8 ## cat 3 6 9 names(my.data)[3] &lt;- &quot;col.3&quot; my.data ## col_1 col_2 col.3 ## ant 1 4 7 ## bee 2 5 8 ## cat 3 6 9 names(my.data)[names(my.data)==&quot;col_2&quot;] ## [1] &quot;col_2&quot; my.data[&quot;col_2&quot;] ## col_2 ## ant 4 ## bee 5 ## cat 6 my.data$col_2 ## [1] 4 5 6 my.data[,2] ## [1] 4 5 6 names(my.data)[names(my.data)==&quot;col_2&quot;] &lt;- &quot;col.2&quot; my.data ## col_1 col.2 col.3 ## ant 1 4 7 ## bee 2 5 8 ## cat 3 6 9 names(my.data) &lt;- gsub(&quot;_&quot;, &quot;.&quot;, names(my.data)) my.data ## col.1 col.2 col.3 ## ant 1 4 7 ## bee 2 5 8 ## cat 3 6 9 rownames(my.data) ## [1] &quot;ant&quot; &quot;bee&quot; &quot;cat&quot; my.data$species &lt;- rownames(my.data) my.data ## col.1 col.2 col.3 species ## ant 1 4 7 ant ## bee 2 5 8 bee ## cat 3 6 9 cat rownames(my.data) &lt;- NULL my.data ## col.1 col.2 col.3 species ## 1 1 4 7 ant ## 2 2 5 8 bee ## 3 3 6 9 cat colnames(my.data) &lt;- c(&quot;good&quot;, &quot;better&quot;, &quot;best&quot;, &quot;species&quot;) my.data ## good better best species ## 1 1 4 7 ant ## 2 2 5 8 bee ## 3 3 6 9 cat keep &lt;- 2:ncol(my.data) my.data[,keep] ## better best species ## 1 4 7 ant ## 2 5 8 bee ## 3 6 9 cat "],
["correlation-plots.html", "Chapter 7 Correlation Plots", " Chapter 7 Correlation Plots iris ## Sepal.Length Sepal.Width Petal.Length Petal.Width Species ## 1 5.1 3.5 1.4 0.2 setosa ## 2 4.9 3.0 1.4 0.2 setosa ## 3 4.7 3.2 1.3 0.2 setosa ## 4 4.6 3.1 1.5 0.2 setosa ## 5 5.0 3.6 1.4 0.2 setosa ## 6 5.4 3.9 1.7 0.4 setosa ## 7 4.6 3.4 1.4 0.3 setosa ## 8 5.0 3.4 1.5 0.2 setosa ## 9 4.4 2.9 1.4 0.2 setosa ## 10 4.9 3.1 1.5 0.1 setosa ## 11 5.4 3.7 1.5 0.2 setosa ## 12 4.8 3.4 1.6 0.2 setosa ## 13 4.8 3.0 1.4 0.1 setosa ## 14 4.3 3.0 1.1 0.1 setosa ## 15 5.8 4.0 1.2 0.2 setosa ## 16 5.7 4.4 1.5 0.4 setosa ## 17 5.4 3.9 1.3 0.4 setosa ## 18 5.1 3.5 1.4 0.3 setosa ## 19 5.7 3.8 1.7 0.3 setosa ## 20 5.1 3.8 1.5 0.3 setosa ## 21 5.4 3.4 1.7 0.2 setosa ## 22 5.1 3.7 1.5 0.4 setosa ## 23 4.6 3.6 1.0 0.2 setosa ## 24 5.1 3.3 1.7 0.5 setosa ## 25 4.8 3.4 1.9 0.2 setosa ## 26 5.0 3.0 1.6 0.2 setosa ## 27 5.0 3.4 1.6 0.4 setosa ## 28 5.2 3.5 1.5 0.2 setosa ## 29 5.2 3.4 1.4 0.2 setosa ## 30 4.7 3.2 1.6 0.2 setosa ## 31 4.8 3.1 1.6 0.2 setosa ## 32 5.4 3.4 1.5 0.4 setosa ## 33 5.2 4.1 1.5 0.1 setosa ## 34 5.5 4.2 1.4 0.2 setosa ## 35 4.9 3.1 1.5 0.2 setosa ## 36 5.0 3.2 1.2 0.2 setosa ## 37 5.5 3.5 1.3 0.2 setosa ## 38 4.9 3.6 1.4 0.1 setosa ## 39 4.4 3.0 1.3 0.2 setosa ## 40 5.1 3.4 1.5 0.2 setosa ## 41 5.0 3.5 1.3 0.3 setosa ## 42 4.5 2.3 1.3 0.3 setosa ## 43 4.4 3.2 1.3 0.2 setosa ## 44 5.0 3.5 1.6 0.6 setosa ## 45 5.1 3.8 1.9 0.4 setosa ## 46 4.8 3.0 1.4 0.3 setosa ## 47 5.1 3.8 1.6 0.2 setosa ## 48 4.6 3.2 1.4 0.2 setosa ## 49 5.3 3.7 1.5 0.2 setosa ## 50 5.0 3.3 1.4 0.2 setosa ## 51 7.0 3.2 4.7 1.4 versicolor ## 52 6.4 3.2 4.5 1.5 versicolor ## 53 6.9 3.1 4.9 1.5 versicolor ## 54 5.5 2.3 4.0 1.3 versicolor ## 55 6.5 2.8 4.6 1.5 versicolor ## 56 5.7 2.8 4.5 1.3 versicolor ## 57 6.3 3.3 4.7 1.6 versicolor ## 58 4.9 2.4 3.3 1.0 versicolor ## 59 6.6 2.9 4.6 1.3 versicolor ## 60 5.2 2.7 3.9 1.4 versicolor ## 61 5.0 2.0 3.5 1.0 versicolor ## 62 5.9 3.0 4.2 1.5 versicolor ## 63 6.0 2.2 4.0 1.0 versicolor ## 64 6.1 2.9 4.7 1.4 versicolor ## 65 5.6 2.9 3.6 1.3 versicolor ## 66 6.7 3.1 4.4 1.4 versicolor ## 67 5.6 3.0 4.5 1.5 versicolor ## 68 5.8 2.7 4.1 1.0 versicolor ## 69 6.2 2.2 4.5 1.5 versicolor ## 70 5.6 2.5 3.9 1.1 versicolor ## 71 5.9 3.2 4.8 1.8 versicolor ## 72 6.1 2.8 4.0 1.3 versicolor ## 73 6.3 2.5 4.9 1.5 versicolor ## 74 6.1 2.8 4.7 1.2 versicolor ## 75 6.4 2.9 4.3 1.3 versicolor ## 76 6.6 3.0 4.4 1.4 versicolor ## 77 6.8 2.8 4.8 1.4 versicolor ## 78 6.7 3.0 5.0 1.7 versicolor ## 79 6.0 2.9 4.5 1.5 versicolor ## 80 5.7 2.6 3.5 1.0 versicolor ## 81 5.5 2.4 3.8 1.1 versicolor ## 82 5.5 2.4 3.7 1.0 versicolor ## 83 5.8 2.7 3.9 1.2 versicolor ## 84 6.0 2.7 5.1 1.6 versicolor ## 85 5.4 3.0 4.5 1.5 versicolor ## 86 6.0 3.4 4.5 1.6 versicolor ## 87 6.7 3.1 4.7 1.5 versicolor ## 88 6.3 2.3 4.4 1.3 versicolor ## 89 5.6 3.0 4.1 1.3 versicolor ## 90 5.5 2.5 4.0 1.3 versicolor ## 91 5.5 2.6 4.4 1.2 versicolor ## 92 6.1 3.0 4.6 1.4 versicolor ## 93 5.8 2.6 4.0 1.2 versicolor ## 94 5.0 2.3 3.3 1.0 versicolor ## 95 5.6 2.7 4.2 1.3 versicolor ## 96 5.7 3.0 4.2 1.2 versicolor ## 97 5.7 2.9 4.2 1.3 versicolor ## 98 6.2 2.9 4.3 1.3 versicolor ## 99 5.1 2.5 3.0 1.1 versicolor ## 100 5.7 2.8 4.1 1.3 versicolor ## 101 6.3 3.3 6.0 2.5 virginica ## 102 5.8 2.7 5.1 1.9 virginica ## 103 7.1 3.0 5.9 2.1 virginica ## 104 6.3 2.9 5.6 1.8 virginica ## 105 6.5 3.0 5.8 2.2 virginica ## 106 7.6 3.0 6.6 2.1 virginica ## 107 4.9 2.5 4.5 1.7 virginica ## 108 7.3 2.9 6.3 1.8 virginica ## 109 6.7 2.5 5.8 1.8 virginica ## 110 7.2 3.6 6.1 2.5 virginica ## 111 6.5 3.2 5.1 2.0 virginica ## 112 6.4 2.7 5.3 1.9 virginica ## 113 6.8 3.0 5.5 2.1 virginica ## 114 5.7 2.5 5.0 2.0 virginica ## 115 5.8 2.8 5.1 2.4 virginica ## 116 6.4 3.2 5.3 2.3 virginica ## 117 6.5 3.0 5.5 1.8 virginica ## 118 7.7 3.8 6.7 2.2 virginica ## 119 7.7 2.6 6.9 2.3 virginica ## 120 6.0 2.2 5.0 1.5 virginica ## 121 6.9 3.2 5.7 2.3 virginica ## 122 5.6 2.8 4.9 2.0 virginica ## 123 7.7 2.8 6.7 2.0 virginica ## 124 6.3 2.7 4.9 1.8 virginica ## 125 6.7 3.3 5.7 2.1 virginica ## 126 7.2 3.2 6.0 1.8 virginica ## 127 6.2 2.8 4.8 1.8 virginica ## 128 6.1 3.0 4.9 1.8 virginica ## 129 6.4 2.8 5.6 2.1 virginica ## 130 7.2 3.0 5.8 1.6 virginica ## 131 7.4 2.8 6.1 1.9 virginica ## 132 7.9 3.8 6.4 2.0 virginica ## 133 6.4 2.8 5.6 2.2 virginica ## 134 6.3 2.8 5.1 1.5 virginica ## 135 6.1 2.6 5.6 1.4 virginica ## 136 7.7 3.0 6.1 2.3 virginica ## 137 6.3 3.4 5.6 2.4 virginica ## 138 6.4 3.1 5.5 1.8 virginica ## 139 6.0 3.0 4.8 1.8 virginica ## 140 6.9 3.1 5.4 2.1 virginica ## 141 6.7 3.1 5.6 2.4 virginica ## 142 6.9 3.1 5.1 2.3 virginica ## 143 5.8 2.7 5.1 1.9 virginica ## 144 6.8 3.2 5.9 2.3 virginica ## 145 6.7 3.3 5.7 2.5 virginica ## 146 6.7 3.0 5.2 2.3 virginica ## 147 6.3 2.5 5.0 1.9 virginica ## 148 6.5 3.0 5.2 2.0 virginica ## 149 6.2 3.4 5.4 2.3 virginica ## 150 5.9 3.0 5.1 1.8 virginica iris %&gt;% select(-Species) %&gt;% cor() ## Sepal.Length Sepal.Width Petal.Length Petal.Width ## Sepal.Length 1.0000000 -0.1175698 0.8717538 0.8179411 ## Sepal.Width -0.1175698 1.0000000 -0.4284401 -0.3661259 ## Petal.Length 0.8717538 -0.4284401 1.0000000 0.9628654 ## Petal.Width 0.8179411 -0.3661259 0.9628654 1.0000000 M &lt;- iris %&gt;% select(-Species) %&gt;% cor(method = &quot;kendall&quot;) corrplot::corrplot(M) corrplot::corrplot(M, method = &quot;color&quot;) corrplot::corrplot(M, method = &quot;color&quot;, type = &quot;upper&quot;) corrplot::corrplot(M, method = &quot;color&quot;, type = &quot;upper&quot;, order = &quot;hclust&quot;) corrplot::corrplot(M, method = &quot;color&quot;, type = &quot;upper&quot;, order = &quot;hclust&quot;, addCoef.col = &quot;black&quot;) corrplot::corrplot(M, method = &quot;color&quot;, type = &quot;upper&quot;, order = &quot;hclust&quot;, addCoef.col = &quot;black&quot;, tl.col=&quot;black&quot;) corrplot::corrplot(M, method = &quot;color&quot;, type = &quot;upper&quot;, order = &quot;hclust&quot;, addCoef.col = &quot;black&quot;, tl.col=&quot;black&quot;, tl.srt = 45) "],
["if-else-and-case-when-comparison.html", "Chapter 8 if_else() and case_when(): Comparison 8.1 case_when() 8.2 Compare this with if_else()", " Chapter 8 if_else() and case_when(): Comparison 8.1 case_when() case_when() from https://www.rdocumentation.org/packages/dplyr/versions/0.7.8/topics/case_when x &lt;- 1:50 y &lt;- 51:100 df &lt;- data.frame(x,y) df ## x y ## 1 1 51 ## 2 2 52 ## 3 3 53 ## 4 4 54 ## 5 5 55 ## 6 6 56 ## 7 7 57 ## 8 8 58 ## 9 9 59 ## 10 10 60 ## 11 11 61 ## 12 12 62 ## 13 13 63 ## 14 14 64 ## 15 15 65 ## 16 16 66 ## 17 17 67 ## 18 18 68 ## 19 19 69 ## 20 20 70 ## 21 21 71 ## 22 22 72 ## 23 23 73 ## 24 24 74 ## 25 25 75 ## 26 26 76 ## 27 27 77 ## 28 28 78 ## 29 29 79 ## 30 30 80 ## 31 31 81 ## 32 32 82 ## 33 33 83 ## 34 34 84 ## 35 35 85 ## 36 36 86 ## 37 37 87 ## 38 38 88 ## 39 39 89 ## 40 40 90 ## 41 41 91 ## 42 42 92 ## 43 43 93 ## 44 44 94 ## 45 45 95 ## 46 46 96 ## 47 47 97 ## 48 48 98 ## 49 49 99 ## 50 50 100 case_when( x %% 35 == 0 ~ &quot;fizz buzz&quot;, x %% 5 == 0 ~ &quot;fizz&quot;, x %% 7 == 0 ~ &quot;buzz&quot;, TRUE ~ as.character(x) ) ## [1] &quot;1&quot; &quot;2&quot; &quot;3&quot; &quot;4&quot; &quot;fizz&quot; &quot;6&quot; ## [7] &quot;buzz&quot; &quot;8&quot; &quot;9&quot; &quot;fizz&quot; &quot;11&quot; &quot;12&quot; ## [13] &quot;13&quot; &quot;buzz&quot; &quot;fizz&quot; &quot;16&quot; &quot;17&quot; &quot;18&quot; ## [19] &quot;19&quot; &quot;fizz&quot; &quot;buzz&quot; &quot;22&quot; &quot;23&quot; &quot;24&quot; ## [25] &quot;fizz&quot; &quot;26&quot; &quot;27&quot; &quot;buzz&quot; &quot;29&quot; &quot;fizz&quot; ## [31] &quot;31&quot; &quot;32&quot; &quot;33&quot; &quot;34&quot; &quot;fizz buzz&quot; &quot;36&quot; ## [37] &quot;37&quot; &quot;38&quot; &quot;39&quot; &quot;fizz&quot; &quot;41&quot; &quot;buzz&quot; ## [43] &quot;43&quot; &quot;44&quot; &quot;fizz&quot; &quot;46&quot; &quot;47&quot; &quot;48&quot; ## [49] &quot;buzz&quot; &quot;fizz&quot; 8.2 Compare this with if_else() if_else(x %% 2 == 0, &quot;even&quot;, &quot;odd&quot;) ## [1] &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; ## [11] &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; ## [21] &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; ## [31] &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; ## [41] &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; &quot;odd&quot; &quot;even&quot; "],
["subset.html", "Chapter 9 Subsetting 9.1 Subsetting using brackets 9.2 Subset using brackets by omitting the rows and columns we don’t want 9.3 Subset using brackets in combination with the which() function and the %in% operator 9.4 Subset using the subset() function 9.5 Subset using dyplyr’s filter() and select()", " Chapter 9 Subsetting From https://www.r-bloggers.com/5-ways-to-subset-a-data-frame-in-r/ Note: since this is down for maintenance, I will turn off evaluation on these chunks: education &lt;- read.csv(&quot;https://vincentarelbundock.github.io/Rdatasets/csv/robustbase/education.csv&quot;, stringsAsFactors = FALSE) colnames(education) &lt;- c(&quot;X&quot;,&quot;State&quot;,&quot;Region&quot;,&quot;Urban.Population&quot;,&quot;Per.Capita.Income&quot;,&quot;Minor.Population&quot;,&quot;Education.Expenditures&quot;) glimpse(education) ## Rows: 50 ## Columns: 7 ## $ X &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,… ## $ State &lt;chr&gt; &quot;ME&quot;, &quot;NH&quot;, &quot;VT&quot;, &quot;MA&quot;, &quot;RI&quot;, &quot;CT&quot;, &quot;NY&quot;, &quot;NJ&quot;… ## $ Region &lt;int&gt; 1, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2… ## $ Urban.Population &lt;int&gt; 508, 564, 322, 846, 871, 774, 856, 889, 715, 7… ## $ Per.Capita.Income &lt;int&gt; 3944, 4578, 4011, 5233, 4780, 5889, 5663, 5759… ## $ Minor.Population &lt;int&gt; 325, 323, 328, 305, 303, 307, 301, 310, 300, 3… ## $ Education.Expenditures &lt;int&gt; 235, 231, 270, 261, 300, 317, 387, 285, 300, 2… 9.1 Subsetting using brackets education[c(10:21),c(2,6:7)] ## State Minor.Population Education.Expenditures ## 10 OH 324 221 ## 11 IN 329 264 ## 12 IL 320 308 ## 13 MI 337 379 ## 14 WI 328 342 ## 15 MN 330 378 ## 16 IA 318 232 ## 17 MO 309 231 ## 18 ND 333 246 ## 19 SD 330 230 ## 20 NB 318 268 ## 21 KS 304 337 9.2 Subset using brackets by omitting the rows and columns we don’t want education[-c(1:9,22:50),-c(1,3:5)] ## State Minor.Population Education.Expenditures ## 10 OH 324 221 ## 11 IN 329 264 ## 12 IL 320 308 ## 13 MI 337 379 ## 14 WI 328 342 ## 15 MN 330 378 ## 16 IA 318 232 ## 17 MO 309 231 ## 18 ND 333 246 ## 19 SD 330 230 ## 20 NB 318 268 ## 21 KS 304 337 9.3 Subset using brackets in combination with the which() function and the %in% operator education[which(education$Region == 2),names(education) %in% c(&quot;State&quot;,&quot;Minor.Population&quot;,&quot;Education.Expenditures&quot;)] ## State Minor.Population Education.Expenditures ## 10 OH 324 221 ## 11 IN 329 264 ## 12 IL 320 308 ## 13 MI 337 379 ## 14 WI 328 342 ## 15 MN 330 378 ## 16 IA 318 232 ## 17 MO 309 231 ## 18 ND 333 246 ## 19 SD 330 230 ## 20 NB 318 268 ## 21 KS 304 337 9.4 Subset using the subset() function subset(education, Region == 2, select = c(&quot;State&quot;,&quot;Minor.Population&quot;,&quot;Education.Expenditures&quot;)) ## State Minor.Population Education.Expenditures ## 10 OH 324 221 ## 11 IN 329 264 ## 12 IL 320 308 ## 13 MI 337 379 ## 14 WI 328 342 ## 15 MN 330 378 ## 16 IA 318 232 ## 17 MO 309 231 ## 18 ND 333 246 ## 19 SD 330 230 ## 20 NB 318 268 ## 21 KS 304 337 9.5 Subset using dyplyr’s filter() and select() select(filter(education, Region == 2),c(State,Minor.Population:Education.Expenditures)) ## State Minor.Population Education.Expenditures ## 1 OH 324 221 ## 2 IN 329 264 ## 3 IL 320 308 ## 4 MI 337 379 ## 5 WI 328 342 ## 6 MN 330 378 ## 7 IA 318 232 ## 8 MO 309 231 ## 9 ND 333 246 ## 10 SD 330 230 ## 11 NB 318 268 ## 12 KS 304 337 "],
["references.html", "References", " References "]
]
